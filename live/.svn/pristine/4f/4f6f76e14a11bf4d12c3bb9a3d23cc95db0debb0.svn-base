<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Pembelian_umum extends MY_Controller {
	function __construct() {
		parent::__construct();
		$this->cf = array(
				'modul_id'	=> 5
			);
	}

	public function index(){
		$data['main_view']	= 'pembelian_umum/add_pembelian_langsung';
		$data['title']		= 'Pembelian Umum';
		$data['cf']			=  $this->cf;
		$this->load->view('template',$data);
	}

	public function data_pembelian_langsung()
	{
		$data['main_view']	= 'pembelian_umum/index';
		$data['title']		= 'Resep Pasien';
		$data['cf']			=  $this->cf;
		$this->db->select('*');
		$this->db->where('tv.visit_status >=','4');
		$this->db->join('trx_visit tv','tv.visit_id = tdb.visit_id');
		$this->db->join('mst_employer me','me.id_employe = tdb.tdb_operator','left');
		// $this->db->join('trx_visit_bill tvb','tvb.visit_id = tv.visit_id');
		$data['pembelian_umum']	= $this->db->get('trx_direct_buy tdb');
		$this->load->view('template',$data);
	}

	public function simpan_pembelian_langsung()
	{
		$dataPost 	= $this->input->post();
		// insert to trx visit
		$visit_id 	= $this->gen_visit_id();
		$tdb_number 	= $visit_id;
		$data 	= array(
			'visit_id'	=> $visit_id,
			'visit_rekmed'	=> $tdb_number,
			'visit_type'	=> 'pembelian umum',
			'visit_in'		=> date('Y-m-d H:i:s'),
			'visit_status'	=> 3
		);
		$this->db->insert('trx_visit',$data);

		// insert to trx direct buy
		$data 	= array(
			'visit_id' 	=> $visit_id,
			'tdb_number'=> 'PU-'.$tdb_number,
			'tdb_operator'	=> get_user('emp_id'),
			'tdb_discount'	=> $dataPost['discount'],
			'tdb_total'	=> $dataPost['grand'],
		);
		$this->db->insert('trx_direct_buy',$data);
		
		$detail = $this->input->post();
		$total_price 	= 0;
		foreach($detail['rows'] as $r){
			$dt = explode('|',$r);
			$data = array(
				'tdb_number'	=> 'PU-'.$tdb_number,
				'tdb_item'		=> $dt[0],
				'tdb_qty'		=> $dt[1],
				'tdb_price_per_unit'	=> $dt[2],
				'tdb_price'		=> $dt[1] * $dt[2],
			);
			// insert to trx direct buy detail
			$this->db->insert('trx_direct_buy_detail', $data);
			// insert to trx visit bill detail
			$data = array(
				'visit_id'	=> $visit_id,
				'service_id'	=> '4',
				'service_name'		=> ($dt[3]." ".$dt[1]." ".$dt[4]),
				'price'		=> $dt[2],
				'paramedic_price'	=> 0,
				'other_price'	=> 0,
				'total_price'	=> $dt[1] * $dt[2],
				'cashier_id'	=> '',
				'payment_status'=> '0',
			);
			$this->db->insert('trx_visit_bill',$data);
			$total_price += ($dt[1] * $dt[2]);
		}
	}

	public function gen_visit_id()
	{

        $ym = date('ym');
        $queryVisit = $this->db->like('visit_id', $ym, 'after')->order_by('visit_id', 'DESC')->get('trx_visit', 1, 0)->row();
        $visit_id = count($queryVisit) == 0 ? date('ym') . "0001" : $queryVisit->visit_id + 1;
        return $visit_id;
	}

	function select($visit_id){
		$data['main_view']	= 'apotek/pembelian_umum/detail_pembelian';

		$this->db->select('*');
		$this->db->where('tv.visit_id',$visit_id);
		$this->db->join('trx_direct_buy tdb','tdb.visit_id = tv.visit_id');
		$pembelian	= $this->db->get('trx_visit tv');
		$data['pembelian']	= $pembelian->row();
		$data['pembelian_detail']	= array();
		foreach ($pembelian->result() as $key => $value) {
			$this->db->where('tdb_number',$value->tdb_number);
			$this->db->join('inv_item_master im','tdbd.tdb_item = im.im_id');
			$this->db->join('mst_type_inv mti','im.im_unit = mti.mtype_id');
			$pembelian_detail = $this->db->get('trx_direct_buy_detail tdbd')->result();
			$data['pembelian_detail']	= array_merge($data['pembelian_detail'],$pembelian_detail);
		}

		$data['title']		= 'Resep Pasien';
		$data['cf']			=  $this->cf;
		$this->load->view('template',$data);
	}

	function simpan($tdb_number){
		$data = $this->input->post('ds');
		$visit_id = $data['visit_id'];

		//detail
		$this->db->where('tdb_number',$tdb_number);
		$detail 	= $this->db->get('trx_direct_buy_detail');
		if( $detail->num_rows() >= 1 )
		{
			foreach ($detail->result() as $key => $value) {
				$this->updateStok($value->tdb_item,$value->tdb_qty);
			}
		}

		$dt_stat['visit_status'] = 5;
		$this->db->where('visit_id',$visit_id);
		$this->db->update('trx_visit',$dt_stat);
	}

	public function updateStok($istok_item,$returQty){
		$this->db->where('istok_qty >','0');
		$this->db->where('istok_item',$istok_item);
		$this->db->order_by('istok_exp','asc');
		$stok 		= $this->db->get('inv_item_stok')->row();
		$oldStokId 	= $stok->istok_id;
		$oldStok 	= $stok->istok_qty;
		if( $returQty > $oldStok ){
			$returQty 	= $returQty - $oldStok;
			$dtUpdateStok['istok_qty'] 	= 0;
			$this->db->where('istok_id',$oldStokId);
			$this->db->update('inv_item_stok',$dtUpdateStok);
			$this->updateStok($istok_item,$returQty);
		}else{
			$newStok 	= $oldStok - $returQty;
			$dtUpdateStok['istok_qty'] 	= $newStok;
			$this->db->where('istok_id',$oldStokId);
			$this->db->update('inv_item_stok',$dtUpdateStok);
		}
	}
} // end class