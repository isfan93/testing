<?php

class Pendaftaran_model extends CI_Model {

    function __construct() {
        parent::__construct();
    }

    /**
     * @deprecated
     */
//    function get_rm() {
//        $format = DATE('ym');
//        $q = $this->db->query("SELECT substr(sd_rekmed, 5, 3) as n 
//			  from ptn_social_data where sd_rekmed like '$format%' order by n desc limit 1");
//        if ($q->num_rows() == 0) {
//            $no = '001';
//        } else {
//            $nl = intval(db_conv($q)->n);
//            $nl++;
//            $no = rtrim(sprintf("%'03s\n", $nl));
//        }
//        return $format . $no;
//    }
//    function getRekamMedis($no_rekmed) {
//        $this->db
//                ->select('sd.*,f.fm_id,f.fm_sex,f.fm_relation,f.fm_address,f.fm_telp,f.fm_phone,f.fm_rekmed,f.fm_status')
//                ->where('sd.sd_rekmed', $no_rekmed)
//                ->join('ptn_family f', 'f.sd_rekmed = sd.sd_rekmed', 'left');
//        $query = $this->db->get('ptn_social_data sd');
//
//        if ($query->num_rows() > 0) {
//            return json_encode($query->row_array());
//        } else {
//            return false;
//        }
//    }

    function getMedRecNumber() {
        $query_medical_record = $this->db->order_by('sd_rekmed', 'DESC')->get('ptn_social_data', 1, 0);
        if ($query_medical_record->num_rows() > 0) {
            $last_number = (int) $query_medical_record->row()->sd_rekmed;
            $last_number++;
            $prefix = '';
            for ($i = strlen($last_number); $i < 6; $i++) {
                $prefix .= '0';
            }
            $medical_record_number = $prefix . $last_number;
        } else {
            $medical_record_number = '000001';
        }
        return $medical_record_number;
    }

    function getPatientData() {
        $post_data = $this->input->post();
        if (is_numeric($post_data['searchInput'])) {
            $this->db->where('sd.sd_card_number', $post_data['searchInput']);
        } else {
            $this->db->like('sd.sd_name', $post_data['searchInput']);
        }

        if ((NULL != $post_data['day'] && NULL != $post_data['month'] && NULL != $post_data['year'])) {
            $birthdate = $post_data['year'] . "-" . $post_data['month'] . "-" . $post_data['day'];
            $this->db->where('sd.sd_date_of_birth', $birthdate);
        }

        if (NULL != $post_data['regency']) {
            $this->db->where('sd.sd_reg_kab', $post_data['regency']);
        }

        if (NULL != $post_data['phone']) {
            $this->db->where('sd.sd_telp', $post_data['phone']);
        }

        $query = $this->db->get('ptn_social_data sd');
        if ($query->num_rows() > 0) {
            return $query->result_array();
        } else {
            return array();
        }
    }

    function getProvinsi($id_regency) {
        $this->db
                ->select('p.*')
                ->join('mst_province p', 'p.mpr_id = r.mpr_id')
                ->where('r.mre_id', $id_regency);
        $query = $this->db->get('mst_regency r');

        if ($query->num_rows() > 0) {
            return json_encode($query->row_array());
        } else {
            return false;
        }
    }

    function getVisitID($type) {
        $ym = date('ym');
        $queryVisit = $this->db->like('visit_id', $ym, 'after')->order_by('visit_id', 'DESC')->get('trx_visit', 1, 0)->row();
        $query = $this->db->like('queo_id', $ym, 'after')->order_by('queo_id', 'DESC')->get('trx_queue_outpatient', 1, 0)->row();
        $queo = count($queryVisit) == 0 ? date('ym') . "0001" : $queryVisit->visit_id + 1;
        $no = count($query) == 0 ? 1 : $query->queo_no + 1;

        $dtVisit = array(
            'visit_id' => $queo,
            'visit_rekmed' => $this->input->post('no_rekmed'),
            'visit_type' => $type,
            'visit_in' => date('Y-m-d H:i:s'),
            'visit_status' => 3,
        );
        $this->repo_model->insert('trx_visit', $dtVisit);

        return array('id' => $queo, 'no' => $no);
    }

    function antriPoli() {
        $visit = $this->getVisitID('rajal');
        $data = array(
            'queo_id' => $visit['id'],
            'sd_rekmed' => $this->input->post('no_rekmed'),
            'queo_no' => $visit['no'],
            'queo_datetime' => date('Y-m-d H:i:s'),
            'dr_id' => $this->input->post('physician'),
            'pl_id' => $this->input->post('poli'),
            'sch_id' => 1,
            'modi_id' => 1
        );
        $success = $this->repo_model->insert('trx_queue_outpatient', $data);

        //administration fee
        $bill['visit_id'] = $visit['id'];
        $bill['service_id'] = 9;
        $bill['paramedic_price'] = 0;
        $bill['other_price'] = 0;
        $bill['cashier_id'] = $this->session->userdata('emp_id');
        $bill['payment_status'] = 0;

        $administration = $this->repo_model->get('mst_adm_fee');
        $adm_fee = array(
            'service_name' => $administration[0]->adm_name,
            'price' => $administration[0]->adm_fee,
            'total_price' => $administration[0]->adm_fee,
        );
        $adm_fee += $bill;
        $success = $this->repo_model->insert('trx_visit_bill', $adm_fee);
        if ($this->input->post('request_new_card') == TRUE) {
            $new_card = array(
                'service_name' => $administration[1]->adm_name,
                'price' => $administration[1]->adm_fee,
                'total_price' => $administration[1]->adm_fee,
            );
            $new_card += $bill;
            $success = $this->repo_model->insert('trx_visit_bill', $new_card);
        }

        unset($bill['service_id']);
        $physician_fee = $this->repo_model->get('trx_dokter_fee', array('dr_id' => $this->input->post('physician')))->dr_fee;
        $physician_service_name = $this->repo_model->get('mst_service', array('service_id' => 1))->service_name;
        $physician_bill = array(
            'service_id' => 1,
            'service_name' => $physician_service_name,
            'price' => $physician_fee,
            'total_price' => $physician_fee,
        );
        $physician_bill += $bill;
        $success = $this->repo_model->insert('trx_visit_bill', $physician_bill);
        $return = FALSE;
        if ($success) {
            $return = $this->input->post('no_rekmed');
        }
        return $return;
    }

    function singleQueue($no_rekmed) {
        $this->db
                ->where('sd_rekmed', $no_rekmed)
                ->order_by('queo_datetime', 'desc');
        $query = $this->db->get('trx_queue_outpatient', 1);
        if ($query->num_rows() > 0) {
            $queue = $query->row();
            $now = new DateTime('now');
            $queue_datetime = new DateTime($queue->queo_datetime);
            $interval = $now->diff($queue_datetime);
            if ($interval->format('%a') == 0) {
                
            }
        }
    }

    function getSchedule($polyclinic) {
        $this->db->select('me.id_employe,me.sd_name,tds.day,ms.shift_start,ms.shift_end,mp.pl_name,ms.shift_id');
        $this->db->where('tds.pl_id', $polyclinic);
        $this->db->where('me.sd_status', 1);
        $this->db->join('mst_employer me', 'tds.employe_id = me.id_employe');
        $this->db->join('mst_poly mp', 'mp.pl_id = tds.pl_id');
        $this->db->join('mst_shift ms', 'tds.sch_shift = ms.shift_id');
//        $this->db->group_by('tds.employe_id');
        $schedule = $this->db->get('trx_dr_schedule tds');

        if ($schedule->num_rows() > 0) {
            return $schedule->result_array();
        } else {
            return array();
        }
    }

    function getClasses() {
        $this->db
                ->select('c.class_id,c.class_name,c.price')
                ->distinct()
                ->join('mst_room r', 'r.room_id = b.room_id')
                ->join('mst_class c', 'c.class_id = r.class_id')
                ->where('b.status', 1);
        $query = $this->db->get('mst_bed b');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return array();
        }
    }

    function getRoom($class) {
//        $this->db
//                ->join('mst_room r', 'r.room_id = b.room_id')
//                ->join('mst_class c', 'c.class_id = r.class_id')
//                ->join('mst_pavillion p', 'p.pavillion_id = r.pavillion_id')
//                ->where('c.class_id', $class)
//                ->where('b.status', 1)
//                ->order_by('r.room_id');
//        $query = $this->db->get('mst_bed b');

        $sql = "SELECT *
                 FROM (`mst_bed` b)
                 JOIN `mst_room` r ON `r`.`room_id` = `b`.`room_id`
                 JOIN `mst_class` c ON `c`.`class_id` = `r`.`class_id`
                 JOIN `mst_pavillion` p ON `p`.`pavillion_id` = `r`.`pavillion_id`
                 WHERE `c`.`class_id` = ?
                 AND `b`.`status` =  1
                 AND b.bed_id NOT IN (
                    SELECT h.bed_id FROM hos_bed_occupation h
                    JOIN `trx_visit` tv ON `tv`.`visit_id` = `h`.`visit_id`
                    WHERE `tv`.`visit_out` != '0000-00-00 00:00:00'
                 )
                 ORDER BY `r`.`room_id`";

        $query = $this->db->query($sql, array($class));

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return array();
        }
    }

    public function daftarAll() {
        $lab = $this->input->post('lab');
        $rad = $this->input->post('rad');
        $rajal = $this->input->post('rajal');
        $ranap = $this->input->post('ranap');
        $igd = $this->input->post('igd');
        $visitIdRajal = $visitIdRanap = $visitIdLab = $visitIdRad = $visitIdIgd = TRUE;

        $this->db->trans_start();
        if ($lab == 'yes') {
            $visitIdLab = $this->daftar_lab_rad('lab');
        }
        if ($rad == 'yes') {
            $visitIdRad = $this->daftar_lab_rad('rad');
        }
        if ($rajal == 'yes') {
            $visitIdRajal = $this->antriPoli();
        } else if ($ranap == 'yes') {
            $visitIdRanap = $this->daftarRanap();
        } else if ($igd == 'yes') {
            $visitIdIgd = $this->daftar_igd();
        }
        $this->db->trans_complete();
        $return['sd_rekmed'] = $this->input->post('no_rekmed');

        if ($visitIdRajal == FALSE || $visitIdRanap == FALSE || $visitIdLab == FALSE || $visitIdRad == FALSE || $visitIdIgd == FALSE) {
            return FALSE;
        } else {
            return $return['sd_rekmed'];
        }
    }

    function daftarRanap() {

        $visit = $this->getVisitID('ranap');
        $bed_id = explode('-', $this->input->post('rooms'));
        $data = array(
            'visit_id' => $visit['id'],
            'bed_id' => $bed_id[3],
        );
        $success = $this->repo_model->insert('hos_bed_occupation', $data);

        //administration fee
        $bill['visit_id'] = $visit['id'];
        $bill['service_id'] = 9;
        $bill['paramedic_price'] = 0;
        $bill['other_price'] = 0;
        $bill['cashier_id'] = $this->session->userdata('emp_id');
        $bill['payment_status'] = 0;

        $administration = $this->repo_model->get('mst_adm_fee');
        $adm_fee = array(
            'service_name' => $administration[0]->adm_name,
            'price' => $administration[0]->adm_fee,
            'total_price' => $administration[0]->adm_fee,
        );
        $adm_fee += $bill;
        $success = $this->repo_model->insert('trx_visit_bill', $adm_fee);

        if ($this->input->post('request_new_card') == TRUE) {
            $new_card = array(
                'service_name' => $administration[1]->adm_name,
                'price' => $administration[1]->adm_fee,
                'total_price' => $administration[1]->adm_fee,
            );
            $new_card += $bill;
            $success = $this->repo_model->insert('trx_visit_bill', $new_card);
        }

//        unset($bill['service_id']);
//        $class_price = $this->repo_model->get('mst_class', array('class_id' => $this->input->post('class')))->price;
//        $room_service_name = $this->repo_model->get('mst_service', array('service_id' => 8))->service_name;
//        $class = array(
//            'service_id' => 8,
//            'service_name' => $room_service_name,
//            'price' => $class_price,
//            'total_price' => $class_price,
//        );
//        $class += $bill;
//        $success = $this->repo_model->insert('trx_visit_bill', $class);

        $return = FALSE;
        if ($success) {
            $return = $visit['id'];
        }
        return $return;
    }

    function daftar_igd() {
        $this->db->trans_start();
        $visit = $this->getVisitID('igd');
        $visit_id = $visit['id'];
        $data = array(
            'mdc_id' => $visit['id'],
            'sd_rekmed' => $this->input->post('no_rekmed'),
            'dr_id' => $this->input->post('physician'),
            'pl_id' => '12',
            'modi_id' => 1
        );
        $success = $this->repo_model->insert('trx_medical', $data);

        $visiting['visit_in'] = $this->input->post('jam_masuk_igd');
        $success = $this->repo_model->update("trx_visit", "visit_id = $visit_id", $visiting);

        //administration fee
        $bill['visit_id'] = $visit['id'];
        $bill['service_id'] = 9;
        $bill['paramedic_price'] = 0;
        $bill['other_price'] = 0;
        $bill['cashier_id'] = $this->session->userdata('emp_id');
        $bill['payment_status'] = 0;

        $administration = $this->repo_model->get('mst_adm_fee');
        $adm_fee = array(
            'service_name' => $administration[0]->adm_name,
            'price' => $administration[0]->adm_fee,
            'total_price' => $administration[0]->adm_fee,
        );
        $adm_fee += $bill;
        $success = $this->repo_model->insert('trx_visit_bill', $adm_fee);

        if ($this->input->post('request_new_card') == TRUE) {
            $new_card = array(
                'service_name' => $administration[1]->adm_name,
                'price' => $administration[1]->adm_fee,
                'total_price' => $administration[1]->adm_fee,
            );
            $new_card += $bill;
            $success = $this->repo_model->insert('trx_visit_bill', $new_card);
        }



        $physician_fee = $this->repo_model->get('mst_treathment', array('treat_id' => '108'))->treat_item_price;
        $bill = array(
            'visit_id' => $visit['id'],
            'service_id' => 1,
            'service_name' => 'Layanan Dokter IGD ',
            'price' => $physician_fee,
            'paramedic_price' => 0,
            'other_price' => 0,
            'total_price' => $physician_fee,
            'cashier_id' => $this->session->userdata('emp_id'),
            'payment_status' => 0
        );
        $success = $this->repo_model->insert('trx_visit_bill', $bill);

        $this->db->trans_complete();
        $return = FALSE;
        if ($success) {
            $return = $visit['id'];
        }
        return $return;
    }

    public function daftar_lab_rad($type) {
        $generate_id = Modules::run('lab/gen_lab_queue_id');
        $lab_queue_id = $generate_id['lab_queue_id'];
        $lab_queue_no = $generate_id['lab_queue_no'];

        $data_visit['visit_id'] = $generate_id['lab_queue_id'];
        $data_visit['visit_type'] = ($type == 'lab') ? 'lab' : 'rad';
        $data_visit['visit_rekmed'] = $this->input->post('no_rekmed');
        $data_visit['visit_in'] = date('Y-m-d H:i:s');
        $data_visit['visit_status'] = '3';
        $success = $this->db->insert('trx_visit', $data_visit);

        $data_antrian_lab['lab_queue_id'] = $lab_queue_id;
        $data_antrian_lab['sd_rekmed'] = $this->input->post('no_rekmed');
        $data_antrian_lab['lab_queue_no'] = $lab_queue_no;
        $data_antrian_lab['lab_queue_datetime'] = date('Y-m-d H:i:s');
        $data_antrian_lab['operator_id'] = '';
        $success = $this->db->insert('trx_lab_queue', $data_antrian_lab);
        $return = FALSE;
        if ($success)
            $return = TRUE;
        return $return;
    }

    function getTracer($sd_rekmed) {
        $this->db
                ->select('tv.visit_in as visit_time,tv.visit_type,tv.visit_rekmed as medical_record,psd.sd_name as patient')
                ->join('ptn_social_data psd', 'psd.sd_rekmed = tv.visit_rekmed')
                ->where(array('tv.visit_rekmed' => $sd_rekmed, 'visit_status' => '3'));
        $query = $this->db->get('trx_visit tv');

        if ($query->num_rows() > 0) {
            return $query;
        } else {
            return false;
        }
    }

    function getTracerUmum($visit_id) {
        if ($this->session->userdata('group_id') != 9) {
            $this->db
                    ->select('tqo.queo_datetime as visit_time,tqo.sd_rekmed as medical_record,me.sd_name as physician,mp.pl_name as poly,psd.sd_name as patient')
                    ->join('mst_employer me', 'me.id_employe = tqo.dr_id')
                    ->join('ptn_social_data psd', 'psd.sd_rekmed = tqo.sd_rekmed')
                    ->join('mst_poly mp', 'mp.pl_id = tqo.pl_id')
                    ->where('tqo.queo_id', $visit_id);
            $query = $this->db->get('trx_queue_outpatient tqo');
        } else {
            $this->db
                    ->select('tv.visit_in as visit_time,tm.sd_rekmed as medical_record, me.sd_name as physician, mp.pl_name as poly, psd.sd_name as patient')
                    ->join('mst_employer me', 'me.id_employe = tm.dr_id')
                    ->join('ptn_social_data psd', 'psd.sd_rekmed = tm.sd_rekmed')
                    ->join('mst_poly mp', 'mp.pl_id = tm.pl_id')
                    ->join('trx_visit tv', 'tm.mdc_id = tv.visit_id')
                    ->where('tm.mdc_id', $visit_id);
            $query = $this->db->get('trx_medical tm');
        }

        if ($query->num_rows() > 0) {
            return $query->row();
        } else {
            return false;
        }
    }

    function getTracerRanap($visit_id) {
        $this->db
                ->select('tv.visit_in as visit_time,p.sd_rekmed as medical_record,p.sd_name as patient,mc.class_name as class,mr.room_id as room')
                ->join('trx_visit tv', 'tv.visit_id = h.visit_id')
                ->join('ptn_social_data p', 'p.sd_rekmed = tv.visit_rekmed')
                ->join('mst_bed mb', 'mb.bed_id = h.bed_id')
                ->join('mst_room mr', 'mr.room_id = mb.room_id')
                ->join('mst_class mc', 'mc.class_id = mr.class_id')
                ->where('h.visit_id', $visit_id);
        $query = $this->db->get('hos_bed_occupation h');

        if ($query->num_rows() > 0) {
            return $query->row();
        } else {
            return false;
        }
    }

    function getTracerLab($visit_id) {
        if ($this->session->userdata('group_id') == 6 || $this->session->userdata('group_id') == 12) {
            $this->db
                    ->select('tv.visit_in as visit_time,tv.visit_rekmed as medical_record,psd.sd_name as patient')
                    ->join('ptn_social_data psd', 'psd.sd_rekmed = tv.visit_rekmed')
                    ->where('tv.visit_id', $visit_id);
            $query = $this->db->get('trx_visit tv');
        }

        if ($query->num_rows() > 0) {
            return $query->row();
        } else {
            return false;
        }
    }

    function getTracerRad($visit_id) {
        if ($this->session->userdata('group_id') == 6 || $this->session->userdata('group_id') == 12) {
            $this->db
                    ->select('tv.visit_in as visit_time,tv.visit_rekmed as medical_record,psd.sd_name as patient')
                    ->join('ptn_social_data psd', 'psd.sd_rekmed = tv.visit_rekmed')
                    ->where('tv.visit_id', $visit_id);
            $query = $this->db->get('trx_visit tv');
        }

        if ($query->num_rows() > 0) {
            return $query->row();
        } else {
            return false;
        }
    }

    function isPatientAvailable($no_rekmed) {
        $this->db
                ->where('visit_rekmed', $no_rekmed)
                ->where('visit_type !=', 'lab')
                ->where('visit_type !=', 'rad')
                ->where("visit_out = '0000-00-00 00:00:00'");
        $query = $this->db->get('trx_visit');
        if ($query->num_rows() > 0) {
            $return = array('is_available' => FALSE,'patient_data' => $query->row_array());
        } else {
            $return = array('is_available' => TRUE,'patient_data' => array());
        }
        
        return $return;
    }

    function getPoly() {
        $this->db->where('pl_id != 100');
        $query = $this->db->get('mst_poly');
        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return false;
        }
    }

}
